
name: Deploy to AWS
"on":
  push:
    branches:
      - main

env:
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
    SERVER_HOST: ${{ secrets.SERVER_HOST }}
    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{secrets.DOCKER_USERNAME}}/erpsystem:latest .
          docker push ${{secrets.DOCKER_USERNAME}}/erpsystem:latest

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SERVER_USERNAME }}
          host: ${{ secrets.SERVER_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop erp || true
            docker rm erp || true
            docker image rm ${{secrets.DOCKER_USERNAME}}/erpsystem:latest
            docker pull ${{secrets.DOCKER_USERNAME}}/erpsystem:latest
            docker run -d --restart unless-stopped  --name erp -e SMTP_PASSWORD=${{secrets.SMTP_PASSWORD}} -e SMTP_USER=${{secrets.SMTP_USER}} -e SMTP_PORT=${{secrets.SMTP_PORT}} -e SMTP_HOST=${{secrets.SMTP_HOST}} -e REFRESH_EXPIRE_TIME=${{secrets.REFRESH_EXPIRE_TIME}} -e ACCESS_EXPIRE_TIME=${{secrets.ACCESS_EXPIRE_TIME}} -e REFRESH_KEY=${{secrets.REFRESH_KEY}} -e ACCESS_KEY=${{secrets.ACCESS_KEY}} -e DATABASE_URL=${{secrets.DATABASE_URL}} -e PORT=3000 -p 5000:3000 ${{secrets.DOCKER_USERNAME}}/erpsystem:latest

